# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '76722208-fb34-43c3-90f1-2a15d5616ce5'

  # Working Directory
  workingDirectory: '$(System.DefaultWorkingDirectory)/web'

  storageAccount: \$web

stages:
- stage: Build
  displayName: Build stage

  jobs:
  - job: Build
    displayName: Build

    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node.js'

    - script: |
        npm install
        npm run build
      displayName: 'npm install and build'
      workingDirectory: $(workingDirectory)

    - publish: $(WorkingDirectory)/build
      artifact: webapp

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()

  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: 'development'
    pool:
      vmImage: 'vs2017-win2016'

    strategy:
      runOnce:
        deploy:

          steps:
          - download: current
            artifact: webapp
          # Azure file copy
          # Copy files to Azure Blob Storage or virtual machines
          - task: AzureFileCopy@3
            inputs:
              sourcePath: $(Pipeline.Workspace)/webapp
              azureSubscription: $(azureSubscription)
              destination: AzureBlob
              storage: $(storageAccount)
              containerName: mccachievementapp-web
              #additionalArgumentsForBlobCopy: # Optional
              #additionalArgumentsForVMCopy: # Optional
              #enableCopyPrerequisites: false # Optional
              copyFilesInParallel: true
              cleanTargetBeforeCopy: true
              #skipCACheck: true # Optional
              #outputStorageUri: # Optional
              #outputStorageContainerSasToken: # Optional
              #sasTokenTimeOutInMinutes: # Optional
